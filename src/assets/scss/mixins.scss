@import './variables.scss';
@import './color-palette.scss';
@use 'sass:string';
@import url(http://fonts.googleapis.com/css?family=Roboto:700,400,500,300);

@mixin ellipsis {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

@mixin multiline-ellipsis {
	-webkit-box-orient: vertical;
	display: -webkit-box;
	-webkit-line-clamp: 6;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: normal;
}

@mixin multiline-ellipsis-h3 {
	-webkit-box-orient: vertical;
	display: -webkit-box;
	-webkit-line-clamp: 3;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: normal;
}

@mixin transition {
	transition: all 0.3s ease-in-out;
}

@function return-immediate($important) {
	@if ($important) {
		@return #{'!important'};
	} @else {
		@return null;
	}
}

@mixin theme-aware($key, $color, $extraArg: 0, $important: null, $removequote: '') {
	@each $theme-name, $theme-color in $themes {
		.theme-#{$theme-name} & {
			@if $key == 'box-shadow' {
				#{$key}: $extraArg
					map-get(map-get($themes, $theme-name), $color)
					return-immediate($important);
			} @else if str-index($key, 'border') {
				#{$key}: $extraArg
					map-get(map-get($themes, $theme-name), $color)
					return-immediate($important);
			} @else if str-index($key, 'border-left') {
				#{$key}: map-get(map-get($themes, $theme-name), $color)
					return-immediate($important);
			} @else if str-index($key, 'outline') {
				#{$key}: $extraArg
					map-get(map-get($themes, $theme-name), $color)
					return-immediate($important);
			} @else if str-index($key, '-webkit-box-shadow') {
				#{$key}: $extraArg
					map-get(map-get($themes, $theme-name), $color)
					return-immediate($important);
			} @else if str-index($removequote, 'remove-quote') {
				#{$key}: $extraArg
					unquote(map-get(map-get($themes, $theme-name), $color))
					return-immediate($important);
			} @else {
				#{$key}: map-get(map-get($themes, $theme-name), $color)
					return-immediate($important);
			}
		}
	}
}
